@use "../assets/styles/variables.scss";
.ColorGame {
  .container {
    display: grid;
    align-items: center;
    justify-items: center;

    .header {
      display: flex;
      text-align: center;
      h1 {
        text-align: center;
        padding: 0 1rem;
      }
      .user {
        text-transform: capitalize;
      }

      .wins {
        color: variables.$white;
      }

      .losses {
        color: variables.$red;
      }
    }

    .color-grid {
      display: grid;
      row-gap: 2rem;
      column-gap: 2rem;

      //Not the safest for production https://caniuse.com/?search=grid%20template%20areas
      grid-template-areas:
        "one one two two"
        "three solution solution four"
        "three solution solution four"
        "five five six six";

      justify-content: center;
      align-items: center;
      width: 60vw;
      min-width: 350px;
      padding-top: 1rem;
      min-height: 450px;

      $length: 250px;
      $height: 100px;

      .color {
        display: flex;
        height: 100%;
        width: 100%;
        border: 3px ridge #f5f5f5;
        border-radius: 10%;
        transition: border-color 250ms;

        &:hover {
          border-color: #696969;
          filter: brightness(80%);
        }

        &:active {
          border-color: black;
        }

        &:nth-of-type(1) {
          grid-area: one;
          width: $length;
          height: $height;
        }
        &:nth-of-type(2) {
          grid-area: two;
          width: $length;
          height: $height;
        }
        &:nth-of-type(3) {
          grid-area: three;
          width: $height;
          height: $length;
        }
        &:nth-of-type(4) {
          grid-area: four;
          width: $height;
          height: $length;
        }

        &:nth-of-type(5) {
          grid-area: five;
          width: $length;
          height: $height;
        }
        &:nth-of-type(6) {
          grid-area: six;
          width: $length;
          height: $height;
        }
      }

      .solution {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        grid-area: solution;
        text-align: center;

        p {
          word-break: break-word;
        }

        &:hover,
        &:active {
          border-color: #f5f5f5;
        }
      }

      @media screen and (max-width: 600px) {
        $length: 150px;
        $height: 100px;

        h1 {
          font-size: 1.5em;
        }

        .color {
          &:nth-of-type(1) {
            width: $length;
            height: $height;
          }
          &:nth-of-type(2) {
            width: $length;
            height: $height;
          }
          &:nth-of-type(3) {
            width: $height;
            height: $length;
          }
          &:nth-of-type(4) {
            width: $height;
            height: $length;
          }

          &:nth-of-type(5) {
            width: $length;
            height: $height;
          }
          &:nth-of-type(6) {
            width: $length;
            height: $height;
          }
        }

        .solution {
          width: $height;
          height: $length;
           p {
             padding: 0.5rem;
             font-size: 0.8em
           }
        }
      }
    }

    .footer {
      display: flex;
      align-items: center;
      padding: 1rem;

      button {
        width: 15rem;
      }

      .dates {
        padding-left: 2rem;
      }
    }
  }
}
